# This file contains definitions for the worker pools related to Firefox CI.
#
# Each worker pool is named by its <provisionerId>/<workerType> pair, each with
# the following structure (matching that for taskcluster-worker-manager):
#
# - `description` -- description of this workerType
# - `owner` -- owner of this workerType
# - `email_on_error` -- if true, email the owner on provisioning errors
# - `provider_id` -- the worker-manager provider for this worker pool
# - `config` -- the configuration for this worker pool, specific to the provider type
#
# A top-level `image` property in the config will be interpreted by ci-admin and
# translated into a region[..].launchSpec.ImageId value based on worker-pools.yml.
---
worker-defaults:
    lifecycle:
      reregistrationTimeout: 86400
    worker-config:
        by-implementation:
            docker-worker:
                shutdown:
                    enabled: true
                    afterIdleSeconds: 900
            generic-worker/windows:
                genericWorker:
                    config:
                       "idleTimeoutSecs": 90
                       "cachesDir": "Z:\\caches"
                       "cleanUpTaskDirs": true
                       "deploymentId": "f37dd7ee1cae"
                       "disableReboots": true
                       "downloadsDir": "Z:\\downloads"
                       "ed25519SigningKeyLocation": "C:\\generic-worker\\ed25519-private.key"
                       "livelogExecutable": "C:\\generic-worker\\livelog.exe"
                       "livelogPUTPort": 60022
                       "numberOfTasksToRun": 0
                       "runAfterUserCreation": "C:\\generic-worker\\task-user-init.cmd"
                       "runTasksAsCurrentUser": false
                       "sentryProject": "generic-worker"
                       "shutdownMachineOnIdle": false
                       "shutdownMachineOnInternalError": true
                       "taskclusterProxyExecutable": "C:\\generic-worker\\taskcluster-proxy.exe"
                       "taskclusterProxyPort": 80
                       "tasksDir": "Z:\\"
                       "wstAudience": "firefoxcitc"
                       "wstServerURL": "https://firefoxci-websocktunnel.services.mozilla.com/"
            generic-worker/windows-nss:
                genericWorker:
                    config:
                        "idleTimeoutSecs": 90
                        "checkForNewDeploymentEverySecs": 120
                        "cleanUpTaskDirs": true
                        "ed25519SigningKeyLocation": "C:\\generic-worker\\generic-worker-ed25519-signing-key.key"
                        "livelogExecutable": "C:\\generic-worker\\livelog.exe"
                        "sentryProject": "generic-worker"
                        "shutdownMachineOnInternalError": false
                        "taskclusterProxyExecutable": "C:\\generic-worker\\taskcluster-proxy.exe"
                        "wstAudience": "firefoxcitc"
                        "wstServerURL": "https://firefoxci-websocktunnel.services.mozilla.com/"

pools:
- pool_id: infra/hg-push
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 1
    maxCapacity: 4
    instance_types:
    - instanceType: c5a.large
      capacityPerInstance: 8
      worker-config:
        capacityManagement:
          diskspaceThreshold: 4000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5a.large
      capacityPerInstance: 8
      worker-config:
        capacityManagement:
          diskspaceThreshold: 4000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: c5.large
      capacityPerInstance: 8
      worker-config:
        capacityManagement:
          diskspaceThreshold: 4000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5.large
      capacityPerInstance: 8
      worker-config:
        capacityManagement:
          diskspaceThreshold: 4000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: '{pool-group}/b-linux'
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-2
      - pool-group: gecko-3
        chain-of-trust: trusted
      - pool-group: comm-1
      - pool-group: comm-3
        chain-of-trust: trusted
      - pool-group: kaios-1
      - pool-group: kaios-2
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity:
        by-pool-group:
            "gecko-.*": 1000
            "comm-.*": 200
            "kaios-.*": 10
    instance_types:
    - instanceType: c5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5d.4xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
      utility: 2
    - instanceType: m5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: '{pool-group}/b-linux-1804'
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity:
        by-pool-group:
            "kaios-.*": 10
            default: 1000
    instance_types:
    - instanceType: c5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5d.4xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
      utility: 2
    - instanceType: m5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: gecko-1/b-linux-perf
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    maxCapacity: 20
    instance_types:
    - instanceType: c5d.4xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
      utility: 2
- pool_id: gecko-1/b-linux-perf-1804
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    maxCapacity: 20
    instance_types:
    - instanceType: c5d.4xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
      utility: 2
- pool_id: gecko-1/b-linux-aws
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    maxCapacity: 50
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: gecko-1/b-linux-experiment
  description: Worker for Firefox automation experiment
  owner: glandium@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-west-2]
    image: docker-worker-hvm-builder-current
    maxCapacity: 6
    instance_types:
    - instanceType: c5d.9xlarge
      capacityPerInstance: 3
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: gecko-1/b-linux-aws-1804
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    maxCapacity: 50
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: "{pool-group}/b-linux-gcp"
  description: Worker for Firefox automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-3
        chain-of-trust: trusted
  provider_id:
    by-chain-of-trust:
          trusted: fxci-level3-gcp
          default: fxci-level1-gcp
  config:
    minCapacity: 0
    maxCapacity: 1000
    regions: [us-central1]
    image:
        by-chain-of-trust:
            trusted: monopacker-docker-worker-trusted-current
            default: monopacker-docker-worker-current
    instance_types:
      - minCpuPlatform: "Intel Skylake"
        workerConfig:
          task:
            reclaimDivisor: 2
        disks:
          - autoDelete: true
            boot: true
            initializeParams:
              diskSizeGb: 10
              sourceImage: '<image>'
            type: PERSISTENT
          - autoDelete: true
            initializeParams:
              diskType: zones/us-central1-a/diskTypes/local-ssd
            type: SCRATCH
            interface: NVME
        machine_type: custom-32-73728
        networkInterfaces:
          - accessConfigs:
              - type: ONE_TO_ONE_NAT
- pool_id: "{pool-group}/b-linux-large"
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-2
      - pool-group: gecko-3
        chain-of-trust: trusted
      - pool-group: comm-1
      - pool-group: comm-3
        chain-of-trust: trusted
      - pool-group: kaios-1
      - pool-group: kaios-2
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.9xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5d.12xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5.12xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m4.10xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5.9xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c4.8xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: "{pool-group}/b-linux-large-1804"
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.9xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5d.12xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5.12xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m4.10xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5.9xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c4.8xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: '{pool-group}/decision'
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-2
      - pool-group: gecko-3
        chain-of-trust: trusted
      - pool-group: comm-1
      - pool-group: comm-3
        chain-of-trust: trusted
      - pool-group: kaios-1
      - pool-group: kaios-2
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    minCapacity:
        by-pool-group:
            "gecko-[13]": 5
            default: 0
    maxCapacity:
        by-pool-group:
            gecko-1: 40
            gecko-3: 20
            default: 4
    instance_types:
    - instanceType: c5d.xlarge
      capacityPerInstance: 2
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5ad.xlarge
      capacityPerInstance: 2
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      capacityPerInstance: 2
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5ad.xlarge
      capacityPerInstance: 2
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: '{pool-group}/images'
  description: 'Builds docker images; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-2
      - pool-group: gecko-3
        chain-of-trust: trusted
      - pool-group: comm-1
      - pool-group: comm-3
        chain-of-trust: trusted
      - pool-group: adhoc-1
      - pool-group: adhoc-3
        chain-of-trust: trusted
      - pool-group: app-services-1
      - pool-group: app-services-3
        chain-of-trust: trusted
      - pool-group: kaios-1
      - pool-group: kaios-2
  config:
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    minCapacity: 0
    maxCapacity:
        by-pool-group:
            '(comm|gecko)-.*': 30
            default: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: gecko-3/b-linux-aws
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    maxCapacity: 50
    security: trusted
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
      utility: 2
    - instanceType: m5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: "{pool-group}/b-linux-xlarge"
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
      - pool-group: gecko-2
      - pool-group: gecko-3
        chain-of-trust: trusted
      - pool-group: comm-1
      - pool-group: comm-3
        chain-of-trust: trusted
      - pool-group: kaios-1
      - pool-group: kaios-2
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.18xlarge
      utility: 1.1
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5d.24xlarge
      utility: 1.3
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5.24xlarge
      utility: 1.1
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m4.16xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5.18xlarge
      utility: 0.9
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: "{pool-group}/b-linux-xlarge-1804"
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-1
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.18xlarge
      utility: 1.1
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5d.24xlarge
      utility: 1.3
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m5.24xlarge
      utility: 1.1
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: m4.16xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    - instanceType: c5.18xlarge
      utility: 0.9
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
- pool_id: "{pool-group}/t-linux-xlarge{suffix}"
  description: Worker for gecko-based automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-t
        suffix: ""
      - pool-group: gecko-3
        suffix: ""
        chain-of-trust: trusted
      - pool-group: comm-t
        suffix: ""
      - pool-group: kaios-t
        suffix: ""
        # Separate pool of workers with source checkout caches
      - pool-group: gecko-t
        suffix: "-source"
      - pool-group: comm-t
        suffix: "-source"
      - pool-group: kaios-t
        suffix: "-source"
  config:
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity:
        by-pool-group:
            gecko-t:
                by-suffix:
                    "": 1500
                    "-source": 200
            comm-t: 10
            kaios-t: 10
            gecko-3: 10
    worker-config:
      dockerConfig: {allowPrivileged: false}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: m5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5a.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5ad.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: gecko-t/t-linux-xlarge-source-1804
  description: Worker for Firefox automation tests needing source checkouts.
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    maxCapacity: 3500
    worker-config:
      dockerConfig: {allowPrivileged: false}
    instance_types:
    - instanceType: m5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5a.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5ad.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: "{pool-group}/misc"
  description: Miscellaneous short, low-latency, simple tasks, shared between Gecko
    SCM levels.  Used for things like indexing tasks.  Note that disk space is limited
    (total 80GB, 9GB per task).
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: gecko-t
      - pool-group: comm-t
      - pool-group: kaios-t
  config:
    image: docker-worker-hvm-builder-current
    maxCapacity: 32
    scalingRatio: 0
    instance_types:
    - instanceType: r5d.xlarge
      capacityPerInstance: 8
      worker-config:
        capacityManagement: {diskspaceThreshold: 9000000000}
    - instanceType: m5d.xlarge
      capacityPerInstance: 8
      worker-config:
        capacityManagement: {diskspaceThreshold: 9000000000}
    - instanceType: c5d.xlarge
      capacityPerInstance: 8
      worker-config:
        capacityManagement: {diskspaceThreshold: 9000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: gecko-1/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-b-win2012-current
    maxCapacity: 512
    additional-user-data:
      workerType: gecko-1-b-win2012
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: gecko-3/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-b-win2012-trusted-current
    maxCapacity: 600
    additional-user-data:
      workerType: gecko-3-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: trusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: gecko-t/t-win10-64
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win10-64-current
    maxCapacity: 1024
    scalingRatio: 0
    additional-user-data:
      workerType: gecko-t-win10-64
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: c5.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
        - DeviceName: xvdf
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    worker-config:
      genericWorker:
        config:
          "idleTimeoutSecs": 1

- pool_id: gecko-t/t-win10-64-source
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win10-64-current
    maxCapacity: 512
    scalingRatio: 0
    additional-user-data:
      workerType: gecko-t-win10-64
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: c5.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
        - DeviceName: xvdf
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: gecko-t/t-win10-64-gpu-s
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win10-64-gpu-s-current
    maxCapacity: 512
    additional-user-data:
      workerType: gecko-t-win10-64-gpu-s
    regions: [us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
     - instanceType: g3s.xlarge
       launchConfig:
         BlockDeviceMappings:
         - DeviceName: /dev/xvda
           Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
         - DeviceName: xvdf
           Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
    worker-config:
      genericWorker:
        config:
          "idleTimeoutSecs": 1
- pool_id: gecko-t/t-win7-32
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win7-32-current
    maxCapacity: 1024
    additional-user-data:
      workerType: gecko-t-win7-32
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: c4.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: {VolumeType: gp2, VolumeSize: 30, DeleteOnTermination: true}
        - DeviceName: /dev/sdb
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
        - DeviceName: /dev/sdc
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
    worker-config:
      genericWorker:
        config:
          "idleTimeoutSecs": 1
- pool_id: gecko-t/t-win7-32-gpu
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win7-32-gpu-current
    maxCapacity: 600
    additional-user-data:
      workerType: gecko-t-win7-32-gpu
    regions: [us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: g2.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: {VolumeType: gp2, VolumeSize: 30, DeleteOnTermination: true}
        - DeviceName: /dev/sdb
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
        - DeviceName: /dev/sdc
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
    worker-config:
      genericWorker:
        config:
          "idleTimeoutSecs": 1
- pool_id: comm-1/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-b-win2012-current
    maxCapacity: 512
    additional-user-data:
      workerType: gecko-1-b-win2012
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: comm-3/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-b-win2012-trusted-current
    maxCapacity: 600
    additional-user-data:
      workerType: gecko-3-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: trusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: comm-t/t-win10-64
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win10-64-current
    maxCapacity: 1024
    scalingRatio: 0
    additional-user-data:
      workerType: gecko-t-win10-64
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: c5.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
        - DeviceName: xvdf
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      userData: {}
- pool_id: comm-t/t-win7-32
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-t-win7-32-current
    maxCapacity: 1024
    additional-user-data:
      workerType: gecko-t-win7-32
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
    - instanceType: c4.2xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: {VolumeType: gp2, VolumeSize: 30, DeleteOnTermination: true}
        - DeviceName: /dev/sdb
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
        - DeviceName: /dev/sdc
          Ebs: {VolumeType: gp2, VolumeSize: 120, DeleteOnTermination: true}
- pool_id: gecko-t/t-linux-large
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    maxCapacity: 2500
    worker-config:
      dockerConfig: {allowPrivileged: false}
      shutdown:
        afterIdleSeconds: 15
    instance_types:
    - instanceType: m5.large
      launchConfig:
        # Add the a ssh to login into the instance to investigate instances
        # that don't shutdown (Bug 1600071)
        KeyName: docker-worker-bug1600071
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 32, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 20000000000}
- pool_id: gecko-t/t-linux-large-1804
  description: Worker for Firefox automation based on Ubuntu 18.04
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    maxCapacity: 3500
    worker-config:
      dockerConfig: {allowPrivileged: false}
      shutdown:
        afterIdleSeconds: 15
    instance_types:
    - instanceType: m5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 32, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 20000000000}
- pool_id: comm-t/t-linux-large
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    maxCapacity: 100
    worker-config:
      dockerConfig: {allowPrivileged: false}
    instance_types:
    - instanceType: m5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 32, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 20000000000}
- pool_id: gecko-t/t-linux-xlarge-1804
  description: Worker for Firefox automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-2020-05-04T14-30-19Z
    maxCapacity: 3500
    worker-config:
      dockerConfig: {allowPrivileged: false}
      shutdown:
        afterIdleSeconds: 15
    instance_types:
    - instanceType: m5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5a.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5ad.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: releng-1/linux
  description: Releng github worker
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 100
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.0'}
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: releng-3/linux
  description: Releng github worker
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    security: trusted
    minCapacity: 0
    maxCapacity: 100
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.0'}
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: releng-t/linux
  description: Releng github worker
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 100
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.0'}
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: relops-3/win2019
  description: build windows cloud images for taskcluster windows workloads
  owner: grenade@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    image: relops-image-builder-current
    maxCapacity: 12
    regions: [eu-central-1, us-east-1, us-west-1, us-west-2]
    security: trusted
    implementation: generic-worker/windows
    additional-user-data:
      workerType: relops-image-builder
    instance_types:
    - instanceType: c5.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
        - DeviceName: /dev/sdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
        - DeviceName: /dev/sdc
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: nss-1/linux
  description: Worker type that can be used for nss related pushes.
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 50
    scalingRatio: 0
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: nss-3/linux
  description: Worker type that can be used for nss related pushes.
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 50
    scalingRatio: 0
    security: trusted
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: nss-1/win2012r2
  description: Worker type that can be used for nss related pushes.
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: nss-win2012r2-current
    maxCapacity: 10
    additional-user-data:
      workerType: gecko-1-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows-nss
    instance_types:
      - instanceType: m5d.2xlarge
- pool_id: nss-3/win2012r2
  description: Worker type that can be used for nss related pushes.
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: nss-win2012r2-current
    maxCapacity: 10
    additional-user-data:
      workerType: gecko-1-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: trusted
    implementation: generic-worker/windows-nss
    instance_types:
      - instanceType: m5d.2xlarge
- pool_id: mobile-1/b-linux-large
  description: General-purpose worker for projects by android components team (to
    build and release a very large suite of Kotlin components)
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 500
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-1/b-linux
  description: Level 1 build workers for mobile projects
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 50
    scalingRatio: 0
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-1/images
  description: 'Builds docker images for mobile projects; NOTE: capacity set to 1
    instead of 3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 30
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: c5.9xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
        restrictCPU: false
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-1/bitrise
  description: Level 1 workers to interact with bitrise.io (iOS CI)
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 1  # We can only have 3 concurrent builds with the plan we pay. Let's not overload the queue with level 1 jobs
    scalingRatio: 0
    instance_types:
    # No need for a big instance, it just delegates the heavy lifting to bitrise. That said, we
    # can't use t3 instances. The AMIs aren't compatible
    - instanceType: m3.large
      capacityPerInstance: 1   # capacity reduced to 1 (instead of 8), because we don't want more than 1 task for level 1
      worker-config:
        capacityManagement: {diskspaceThreshold: 9000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-3/b-linux-large
  description: General-purpose worker for projects by android components team (to
    build and release a very large suite of Kotlin components)
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 0
    maxCapacity: 500
    scalingRatio: 0
    security: trusted
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-3/b-linux
  description: Level 3 build workers for mobile projects
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 0
    maxCapacity: 50
    scalingRatio: 0
    security: trusted
    instance_types:
    - instanceType: m5d.xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-3/images
  description: 'Builds docker images for mobile projects; NOTE: capacity set to 1
    instead of 3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 0
    maxCapacity: 30
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    security: trusted
    instance_types:
    - instanceType: c5.9xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
        restrictCPU: false
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mobile-3/bitrise
  description: Level 3 workers to interact with bitrise.io (iOS CI)
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 0
    maxCapacity: 3  # We can only have 3 concurrent builds with the plan we pay
    scalingRatio: 0
    security: trusted
    instance_types:
    # No need for a big instance, it just delegates the heavy lifting to bitrise. That said, we
    # can't use t3 instances. The AMIs aren't compatible
    - instanceType: m3.large
      capacityPerInstance: 3   # capacity reduced to 3 (instead of 8), because we don't want more than 3 tasks for level 3
      worker-config:
        capacityManagement: {diskspaceThreshold: 9000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: "{pool-group}/decision"
  description: Worker for decision tasks
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: adhoc-1
      - pool-group: adhoc-3
        chain-of-trust: trusted
      - pool-group: app-services-1
      - pool-group: app-services-3
        chain-of-trust: trusted
      - pool-group: glean-1
      - pool-group: glean-3
        chain-of-trust: trusted
      - pool-group: mpd001-1
      - pool-group: mpd001-3
        chain-of-trust: trusted
      - pool-group: mobile-1
      - pool-group: mobile-3
        chain-of-trust: trusted
      - pool-group: scriptworker-1
      - pool-group: scriptworker-3
        chain-of-trust: trusted
      - pool-group: xpi-1
      - pool-group: xpi-3
        chain-of-trust: trusted
      - pool-group: ci-1
      - pool-group: ci-3
      - pool-group: l10n-1
      - pool-group: l10n-3
      - pool-group: relops-3
      - pool-group: taskgraph-1
      - pool-group: taskgraph-3
  config:
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-pool-group:
            ".*-3": trusted
            default: null
    minCapacity: 1
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.large
      capacityPerInstance: 2
      worker-config:
        capacityManagement:
          diskspaceThreshold: 30000000000
    - instanceType: c5ad.large
      capacityPerInstance: 2
      worker-config:
        capacityManagement:
          diskspaceThreshold: 30000000000
    - instanceType: m5d.large
      capacityPerInstance: 2
      worker-config:
        capacityManagement:
          diskspaceThreshold: 30000000000
    - instanceType: m5ad.large
      capacityPerInstance: 2
      worker-config:
        capacityManagement:
          diskspaceThreshold: 30000000000
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: app-services-1/b-linux
  description: Worker for rust projects by Application Services team
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 2
    maxCapacity: 100
    scalingRatio: 0
    instance_types:
    # XXX: we might need befier instances (e.g. c5d.9x large) for rust compilation.
    - instanceType: c5d.4xlarge
      utility: 2
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
        restrictCPU: false
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: app-services-3/b-linux
  description: Worker for rust projects by Application Services team
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 2
    maxCapacity: 100
    scalingRatio: 0
    security: trusted
    instance_types:
    # XXX: we might need befier instances (e.g. c5d.9x large) for rust compilation.
    - instanceType: c5d.4xlarge
      utility: 1
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: glean-1/images
  description: 'Builds docker images for gecko; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 15
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: c5d.large
      launchSpec:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: glean-3/images
  description: 'Builds docker images for gecko; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 0
    maxCapacity: 30
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    security: trusted
    instance_types:
    - instanceType: c5d.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: glean-1/b-linux
  description: Worker for rust projects by Glean team
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 2
    maxCapacity: 100
    scalingRatio: 0
    instance_types:
    # XXX: we might need befier instances (e.g. c5d.4x large) for rust compilation.
    - instanceType: c5d.large
      utility: 2
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
        restrictCPU: false
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: glean-3/b-linux
  description: Worker for rust projects by Glean team
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    minCapacity: 2
    maxCapacity: 100
    scalingRatio: 0
    security: trusted
    instance_types:
    # XXX: we might need befier instances (e.g. c5d.4x large) for rust compilation.
    - instanceType: c5d.large
      utility: 1
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mozillaonline-1/b-linux
  description: Worker for MozillaOnline automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: mozillaonline-3/b-linux
  description: Worker for MozillaOnline automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    security: trusted
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.4xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 70000000000}
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: hg-t/linux
  description: Testing for https://hg.mozilla.org/hgcustom/version-control-tools
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.0'}
    instance_types:
    - instanceType: c5d.2xlarge
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
- pool_id: l10n-1/linux
  description: General-purpose worker for l10n automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.5
    - instanceType: m5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.4
    - instanceType: c5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: l10n-1/images
  description: General-purpose worker for l10n automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: c5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.5
    - instanceType: m5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.4
    - instanceType: c5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: l10n-3/linux
  description: General-purpose worker for l10n automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    scalingRatio: 0
    instance_types:
    - instanceType: c5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.5
    - instanceType: m5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.4
    - instanceType: c5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: l10n-3/images
  description: General-purpose worker for l10n automation
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    scalingRatio: 0
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: c5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.5
    - instanceType: m5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.4
    - instanceType: c5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: mpd001-1/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-mpd001-b-win2012-current
    maxCapacity: 6
    additional-user-data:
      workerType: mpd001-1-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: windows-untrusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: mpd001-3/b-win2012
  description: ''
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: occ-mpd001-b-win2012-trusted-current
    maxCapacity: 6
    additional-user-data:
      workerType: mpd001-3-b-win2012
    regions: [us-east-1, us-west-1, us-west-2]
    security: trusted
    implementation: generic-worker/windows
    instance_types:
      - instanceType: c4.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      - instanceType: c5.4xlarge
        launchConfig:
          BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs: {DeleteOnTermination: true, VolumeSize: 40, VolumeType: gp2}
          - DeviceName: /dev/sdb
            Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
- pool_id: xpi-1/images
  description: 'Builds docker images for XPI; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: xpi-3/images
  description: 'Builds docker images for xpi; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: '{pool-group}/b-linux'
  description: Worker for linux build
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  variants:
      - pool-group: adhoc-1
      - pool-group: adhoc-3
        chain-of-trust: trusted
      - pool-group: scriptworker-1
      - pool-group: scriptworker-3
        chain-of-trust: trusted
      - pool-group: xpi-1
      - pool-group: xpi-3
        chain-of-trust: trusted
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image:
        by-chain-of-trust:
            trusted: docker-worker-hvm-builder-trusted-current
            default: docker-worker-hvm-builder-current
    security:
        by-chain-of-trust:
            trusted: trusted
            default: null
    maxCapacity: 10
    instance_types:
    - instanceType: c5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.5
    - instanceType: m5d.large
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
      utility: 1.4
    - instanceType: c5.large
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: gecko-t/t-linux-metal
  description: Monopacker metal workers for Firefox automation
  owner: mcrabill@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: monopacker-docker-worker-baremetal-current
    minCapacity: 0
    maxCapacity: 720
    spot: true
    instance_types:
    - instanceType: r5.metal
      capacityPerInstance: 32
      additional-user-data:
        tmpfsSize: "576G"
      worker-config:
        dockerConfig:
          allowPrivileged: true
        capacityManagement: {diskspaceThreshold: 16000000000}
    - instanceType: m5.metal
      capacityPerInstance: 15
      additional-user-data:
        tmpfsSize: "294G"
      worker-config:
        dockerConfig:
          allowPrivileged: true
        capacityManagement: {diskspaceThreshold: 16000000000}
- pool_id: pmoore-test/gwci-linux
  description: '[Bug 1581920](https://bugzil.la/1581920) - same as aws-provisioner-v1/gwci-linux but for GCP'
  owner: pmoore@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions:
    - us-east-1
    - us-west-1
    - us-west-2
    instance_types:
    - instanceType: c4.2xlarge
      worker-config:
        genericWorker:
          config:
            deploymentId: KSjGK16ySI-A7Cs-DGAnLg
            ed25519SigningKeyLocation: "/etc/generic-worker/ed25519_key"
            livelogExecutable: "/usr/local/bin/livelog"
            runTasksAsCurrentUser: true
            shutdownMachineOnInternalError: false
            taskclusterProxyExecutable: "/usr/local/bin/taskcluster-proxy"
            taskclusterProxyPort: 8080
            tasksDir: "/home"
            workerTypeMetadata:
              machine-setup:
                maintainer: pmoore@mozilla.com
                script: https://raw.githubusercontent.com/taskcluster/generic-worker/b61e0d09401b0f4c4a8f33a5e2eb239bb90dc7ac/worker_types/gwci-linux/bootstrap.sh
            wstAudience: taskcluster-net
            wstServerURL: https://websocktunnel.tasks.build
    minCapacity: 0
    maxCapacity: 10
    image: gwci-linux
- pool_id: project-relman/relman-svc
  description: Release management workers
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 1
    maxCapacity: 100
    instance_types:
    - instanceType: m5.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}

- pool_id: code-analysis-1/linux
  description: Worker for code-analysis CI/CD - level 1
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    instance_types:
    - instanceType: m5d.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
- pool_id: code-analysis-3/linux
  description: Worker for code-analysis CI/CD - level 3
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    instance_types:
    - instanceType: m5d.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
- pool_id: code-review/bot
  description: Worker for the code-review bot.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 1
    maxCapacity: 100
    instance_types:
    - instanceType: m5.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 10, VolumeType: gp2}
    - instanceType: m5a.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 10, VolumeType: gp2}
    - instanceType: m5d.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 10, VolumeType: gp2}
    - instanceType: m5ad.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 10, VolumeType: gp2}
    - instanceType: m4.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 10, VolumeType: gp2}
- pool_id: code-coverage/bot
  description: Worker for the code-coverage bot.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 1
    maxCapacity: 100
    instance_types:
    - instanceType: r5.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: r5d.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: r5a.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: r5ad.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: z1d.large
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: m5.xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: m5a.xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: m5ad.xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: m4.xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: c5.2xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
    - instanceType: c5d.2xlarge
      worker-config:
        capacityManagement:
          diskspaceThreshold: 20000000000
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 100, VolumeType: gp2}
- pool_id: taskgraph-1/images
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: m5d.large
- pool_id: taskgraph-3/images
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: m5d.large
- pool_id: taskgraph-t/linux
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    instance_types:
    - instanceType: m5d.large
- pool_id: ci-1/images
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: m5d.large
- pool_id: ci-3/images
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    instance_types:
    - instanceType: m5d.large
- pool_id: ci-t/linux
  description: Worker for firefox-ci automation.
  owner: release+tc-workers@mozilla.com
  email_on_error: true
  provider_id: aws
  config:
    regions: [us-east-1, us-west-1, us-west-2]
    image: docker-worker-hvm-builder-current
    minCapacity: 0
    maxCapacity: 10
    instance_types:
    - instanceType: m5d.large
- pool_id: scriptworker-1/images
  description: 'Builds docker images for scriptworkers; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-current
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
- pool_id: scriptworker-3/images
  description: 'Builds docker images for scriptworkers; NOTE: capacity set to 1 instead of
    3 (and downgraded to xlarge) to try to avoid [issues with dind](https://bugzilla.mozilla.org/show_bug.cgi?id=1427096)'
  owner: release+tc-workers@mozilla.com
  email_on_error: false
  provider_id: aws
  config:
    image: docker-worker-hvm-builder-trusted-current
    security: trusted
    minCapacity: 0
    maxCapacity: 10
    worker-config: {dindImage: 'taskcluster/dind-service:v4.1'}
    regions: [us-east-1, us-west-1, us-west-2]
    instance_types:
    - instanceType: c5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: m5d.xlarge
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
    - instanceType: c5.xlarge
      launchConfig:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdb
          Ebs: {DeleteOnTermination: true, VolumeSize: 120, VolumeType: gp2}
      worker-config:
        capacityManagement: {diskspaceThreshold: 30000000000}
